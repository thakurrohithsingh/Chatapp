<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title>chatapplication</title>
		<link
			rel="stylesheet"
			href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
		/>
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
		/>
		<script src="/js/socket.io.js"></script>
		<script src="https://cdn.agora.io/sdk/release/AgoraRTCSDK-3.1.1.js"></script>
		<link href="/css/style.css" rel="stylesheet" />
	</head>

	<body>
		<div id="mario-chat">
			<h2>logged as <%= currentusername %></h2>
			<h2><%= user.username %></h2>
			<a href="/video-chat/<%= currentuserid %>/<%= user._id %>">video-call</a>
			<ul id="users"></ul>
			<div id="chat-window">
				<div class="row">
					<div class="col-md-12"></div>
				</div>
				<div id="output"></div>
				<div id="feedback"></div>
			</div>
			<input id="message" type="text" placeholder="Message" />
			<button id="send">Send</button>
		</div>
	</body>
	<script>
				    var currentuserid = <%- JSON.stringify(currentuserid) %>;
				var users = <%- JSON.stringify(user) %>;
				var userids = <%-  JSON.stringify(userids) %>;
				var usernames = <%- JSON.stringify(usernames) %>;
				var senderuserdata;
				var senderuserdataid;
				var sendersocketid1;
				var receiviersocketid;
				var receivieruserdata;
				var receivieruserdataid;
				var receivierid;
				var Messages;
				var receivier = [];
				var sender = [];
				var socket = io();
				// Query DOM
				var message = document.getElementById('message'),
				  btn = document.getElementById('send'),
				  output = document.getElementById('output'),
				  feedback = document.getElementById('feedback'),
				  htmlusers = document.getElementById('users'),
				  receivieronline = document.getElementById('online');
				var videocallbutton = document.getElementById('video-call');
				let remoteContainer = document.getElementById("remote-container");
				var client;
				// Emit events
				for (var i = 0; i < userids.length; i++) {
				  if (currentuserid === userids[i]) {
				    senderuserdata = usernames[i];
				    senderuserdataid = userids[i];
				    break;
				  }
				}
				sender[senderuserdataid] = senderuserdata;
				receivierid = users._id;
				receivier[receivierid] = users.username;

				socket.emit('user_connected', {
				  sender: sender[senderuserdataid],
				  senderid: senderuserdataid,
				  receivier: receivier[receivierid],
				  receivierid: receivierid
				});
				socket.on("user_connected", function (data) {
				  sendersocketid1 = data.sendersocketid;
				  if (data.Message) {
				    Messages = data.Message;
				    for (var i = 0; i < Messages.length; i++) {
				      if (Messages[i].username == data.sender) {
				        output.innerHTML += '<p><strong>' + 'You ' + ': </strong>' + Messages[i].message + '</p>';
				      } else {
				        output.innerHTML += '<p><strong>' + Messages[i].username + ': </strong>' + Messages[i].message + '</p>';
				      }
				    }
				  }
				});
				btn.addEventListener('click', function () {
				  if (message.value === '') {
				    btn.disabled = true;
				  } else {
				    btn.disabled = false;
				    feedback.innerHTML = '';
				    output.innerHTML += '<p><strong>' + 'You' + ': </strong>' + message.value + '</p>';
				    socket.emit('send_message', {
				      message: message.value,
				      sendersocketid: sendersocketid1,
				      sender: sender[senderuserdataid],
				      senderid: senderuserdataid,
				      receivier: receivier[receivierid],
				      receivierid: receivierid
				    });
				    message.value = "";
				  }
				  btn.disabled = false;
				});

				message.addEventListener('keypress', function () {
				  socket.emit('typing', {
				    sender: sender[senderuserdataid],
				    senderid: senderuserdataid,
				    sendersocketid: sendersocketid1,
				    receivier: receivier[receivierid],
				    receivierid: receivierid
				  });
				})

				// Listen for events
				socket.on('new_message', function (data) {
				  console.log("data", data);
				  btn.disabled = false;
				  feedback.innerHTML = '';
				  output.innerHTML += '<p><strong>' + data.sender + ': </strong>' + data.message + '</p>';
				});

				socket.on('typing', function (data) {
				  console.log("typing....", data);
				  feedback.innerHTML = '<p><em>' + data.sender + ' is typing a message...</em></p>';
		    });

		    var option = {
		  appID: "1aed404b83ef46e58c7d99f904f18789",
		  channel: "any-channel",
		  uid: sendersocketid1,
		  token: "0061aed404b83ef46e58c7d99f904f18789IACj9YFTcj/Wzv1eMMNWVfMOTsPIp3i5KZ/2MsXe98ZaEOefFTQAAAAAEABzZqLAne8DXwEAAQCd7wNf"
		};
	</script>
</html>
