<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8" />
	<title>chatapplication</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
	<script src="/js/socket.io.js"></script>
	<link href="/css/style.css" rel="stylesheet" />
	<link rel="manifest" href="/manifest.json" />
</head>

<body>
	<div id="mario-chat">
		<h2>logged as <%= currentusername %></h2>
		<h2><%= user.username %></h2>
		<a href="/video-chat/<%= currentuserid %>/<%= user._id %>">video-call</a>
		<ul id="users"></ul>
		<div id="chat-window">
			<div class="row">
				<div class="col-md-12"></div>
			</div>
			<div id="output"></div>
			<div id="feedback"></div>
		</div>
		<input id="message" type="text" placeholder="Message" />
		<button id="send">Send</button>
	</div>
</body>
<script src="/js/app.js"></script>
<script>
	var currentuserid = <%- JSON.stringify(currentuserid) %>;
	console.log("currentuserid = ", currentuserid);
	var users = <%- JSON.stringify(user) %>;
	console.log("users = ", users);
	var userids = <%-  JSON.stringify(userids) %>;
	console.log("userids = ", userids);
	var usernames = <%- JSON.stringify(usernames) %>;
	console.log("usernames = ", usernames);
	var senderuserdata;
	var senderuserdataid;
	var sendersocketid1;
	var receiviersocketid;
	var receivieruserdata;
	var receivieruserdataid;
	var receivierid;
	var Messages;
	var receivier = [];
	var sender = [];
	var socket = io();
	// Query DOM
	var messageinput = document.getElementById('message'),
		btn = document.getElementById('send'),
		output = document.getElementById('output'),
		feedback = document.getElementById('feedback'),
		htmlusers = document.getElementById('users');
	// Emit events
	for (var i = 0; i < userids.length; i++) {
		if (currentuserid == userids[i]) {
			senderuserdata = usernames[i];
			senderuserdataid = userids[i];
			break;
		}
	}
	sender[senderuserdataid] = senderuserdata;
	receivierid = users._id;
	receivier[receivierid] = users.username;
	console.log("sender", sender[senderuserdataid]);
	console.log("receivier", receivier[receivierid]);


	messageinput.addEventListener('keydown', function () {
		console.log("press-event is executing!!!!");
		socket.emit('typing', {
			sender: sender[senderuserdataid],
			senderid: senderuserdataid,
			sendersocketid: sendersocketid1,
			receivier: receivier[receivierid],
			receivierid: receivierid
		});
	});

	socket.on('typing', function (data) {
		console.log("typing....", data);
		feedback.innerHTML = '<p><em>' + data.sender + ' is typing a message...</em></p>';
	});

	socket.emit('user_connected', {
		sender: sender[senderuserdataid],
		senderid: senderuserdataid,
		receivier: receivier[receivierid],
		receivierid: receivierid
	});
	socket.on("user_connected", function (data) {
		console.log("user_connected_data", data);
		sendersocketid1 = data.sendersocketid;
		if (data.Message) {
			Messages = data.Message;
			for (var i = 0; i < Messages.length; i++) {
				if (Messages[i].username == data.sender) {
					output.innerHTML += '<p><strong>' + 'You ' + ': </strong>' + Messages[i].message + '</p>';
				} else {
					output.innerHTML += '<p><strong>' + Messages[i].username + ': </strong>' + Messages[i].message + '</p>';
				}
			}
		}
	});
	btn.addEventListener('click', function () {
		if (messageinput.value === '') {
			btn.disabled = true;
		} else {
			btn.disabled = false;
			feedback.innerHTML = '';
			output.innerHTML += '<p><strong>' + 'You' + ': </strong>' + messageinput.value + '</p>';
			socket.emit('send_message', {
				message: messageinput.value,
				sendersocketid: sendersocketid1,
				sender: sender[senderuserdataid],
				senderid: senderuserdataid,
				receivier: receivier[receivierid],
				receivierid: receivierid
			});
			messageinput.value = "";
		}
		btn.disabled = false;
	});


	// Listen for events
	socket.on('new_message', function (data) {
		console.log("new_message_data", data);
		deferredPrompt = null;
		btn.disabled = false;
		feedback.innerHTML = '';
		output.innerHTML += '<p><strong>' + data.sender + ': </strong>' + data.message + '</p>';
	});
</script>

</html>